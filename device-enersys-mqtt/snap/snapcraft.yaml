name: edgex-device-mqtt
base: core18
version: "replace-me"
license: Apache-2.0
version-script: |
  echo $(cat VERSION)-$(date +%Y%m%d)+$(git rev-parse --short HEAD)
summary: Connect data MQTT to EdgeX using device-mqtt reference Device Service
title: EdgeX MQTT Device Service
description: |
  The official reference EdgeX device-mqtt Device Service built using the 
  device-sdk-go to interact with MQTT brokers. 
  Initially the daemon in the snap is disabled - a device profile must be
  provisioned externally with core-metadata or provided to device-mqtt inside
  "$SNAP_DATA/config/device-mqtt/res" before starting.

# TODO: add armhf when the project supports this
architectures:
  - build-on: amd64
  - build-on: arm64

grade: stable
confinement: strict

# edinburgh release is epoch 1
epoch: 1

apps:
  device-mqtt:
    adapter: none
    command: bin/device-mqtt -confdir $SNAP_DATA/config/device-mqtt -profile res --registry $CONSUL_ADDR
    environment:
      CONSUL_ADDR: "consul://localhost:8500"
    daemon: simple
    plugs: [network, network-bind]

parts:
  go:
    plugin: nil
    source: snap/local
    build-packages: [curl]
    override-build: |
      # use dpkg architecture to figure out our target arch
      # note - we specifically don't use arch
      case "$(dpkg --print-architecture)" in
        amd64)
          FILE_NAME=go1.11.9.linux-amd64.tar.gz
          FILE_HASH=e88aa3e39104e3ba6a95a4e05629348b4a1ec82791fb3c941a493ca349730608
          ;;
        arm64)
          FILE_NAME=go1.11.9.linux-arm64.tar.gz
          FILE_HASH=892ab6c2510c4caa5905b3b1b6a1d4c6f04e384841fec50881ca2be7e8accf05
          ;;
        armhf)
          FILE_NAME=go1.11.9.linux-armv6l.tar.gz
          FILE_HASH=f0d7b039cae61efdc346669f3459460e3dc03b6c6de528ca107fc53970cba0d1
          ;;
        i386)
          FILE_NAME=go1.11.9.linux-386.tar.gz
          FILE_HASH=0fa4001fcf1ef0644e261bf6dde02fc9f10ae4df6d74fda61fc4d3c3cbef1d79
          ;;
      esac
      # download the archive, failing on ssl cert problems
      curl https://dl.google.com/go/$FILE_NAME -O
      echo "$FILE_HASH $FILE_NAME" > sha256
      sha256sum -c sha256 | grep OK
      tar -C $SNAPCRAFT_STAGE -xf go*.tar.gz --strip-components=1
    prime:
      - "-*"

  device-mqtt:
    source: .
    plugin: make
    build-packages: [git]
    after: [go]
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      make build

      install -DT "./cmd/device-mqtt" "$SNAPCRAFT_PART_INSTALL/bin/device-mqtt"

      # FIXME: settings can't be overridden from the cmd-line!
      # Override 'LogFile' and 'LoggingRemoteURL'
      install -d "$SNAPCRAFT_PART_INSTALL/config/device-mqtt/res/"

      cat "./cmd/res/example/configuration.toml" | \
        sed -e s:\"./device-mqtt.log\":\'\$SNAP_COMMON/device-mqtt.log\': \
          -e s:'ProfilesDir = \"./res/example\"':'ProfilesDir = \"\$SNAP_DATA/config/device-mqtt/res\"': > \
        "$SNAPCRAFT_PART_INSTALL/config/device-mqtt/res/configuration.toml"

      install -DT "./cmd/res/example/mqtt.test.device.profile.yml" \
        "$SNAPCRAFT_PART_INSTALL/config/device-mqtt/res/mqtt.test.device.profile.yml"

      install -DT "./cmd/Attribution.txt" \
         "$SNAPCRAFT_PART_INSTALL/usr/share/doc/device-mqtt/Attribution.txt"
      install -DT "./LICENSE" \
         "$SNAPCRAFT_PART_INSTALL/usr/share/doc/device-mqtt/LICENSE"
