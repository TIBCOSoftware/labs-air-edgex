# /*******************************************************************************
#  * Copyright 2018 Dell Inc.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *
#  * @author: Jim White, Dell
#  * EdgeX Foundry, Fuji, version 1.1.0
#  * added: Jun 30, 2019
#  *******************************************************************************/

version: '3.4'

# all common shared environment variables defined here:
x-common-env-variables: &common-variables
  edgex_registry: consul://edgex-core-consul:8500
  Clients_CoreData_Host: edgex-core-data
  Clients_Logging_Host: edgex-support-logging
  Logging_EnableRemote: "true"

volumes:
  db-data:
  log-data:
  consul-config:
  consul-data:
  consul-scripts:
  portainer_data:
  vault-config:
  vault-file:
  vault-logs:
  secrets-setup-cache:

services:
  volume:
    image: edgexfoundry/docker-edgex-volume:1.1.0
    container_name: edgex-files
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  consul:
    image: edgexfoundry/docker-edgex-consul:1.1.0
    ports:
      - "8400:8400"
      - "8500:8500"
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    networks:
      edgex-network:
        aliases:
            - edgex-core-consul
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - consul-scripts:/consul/scripts
      - vault-config:/vault/config
    depends_on:
      - volume

  config-seed:
    image: edgexfoundry/docker-core-config-seed-go:1.1.0
    container_name: edgex-config-seed
    hostname: edgex-core-config-seed
    networks:
      edgex-network:
        aliases:
            - edgex-core-config-seed
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
    depends_on:
      - volume
      - consul

  vault:
    image: edgexfoundry/docker-edgex-secret-store-go:1.1.0
    container_name: edgex-vault
    hostname: edgex-vault
    networks:
      edgex-network:
        aliases:
            - edgex-vault
    ports:
      - "8200:8200"
    cap_add:
      - "IPC_LOCK"
    environment:
      - VAULT_ADDR=https://edgex-vault:8200
      - VAULT_CONFIG_DIR=/vault/config
      - VAULT_UI=true
    command: >
      /usr/bin/dumb-init -- /bin/sh -c 
      "exec /usr/local/bin/docker-entrypoint.sh server -log-level=info"
    volumes:
      - vault-file:/vault/file
      - vault-logs:/vault/logs
      - secrets-setup-cache:/etc/edgex/pki
      - vault-config:/vault/config
      - consul-scripts:/consul/scripts
    depends_on:
      - volume
      - consul

  vault-worker:
    image: edgexfoundry/docker-edgex-security-secretstore-setup-go:1.1.0
    container_name: edgex-vault-worker
    hostname: edgex-vault-worker
    entrypoint: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh security-secrets-setup; do sleep 1; done;
      /security-secretstore-setup --init=true --vaultInterval=10"
    networks:
      edgex-network:
        aliases:
            - edgex-vault-worker
    volumes:
      - vault-config:/vault/config
      - consul-scripts:/consul/scripts
    depends_on:
      - volume
      - consul
      - vault

# containers for reverse proxy
  kong-db:
    image: postgres:9.6
    container_name: kong-db
    hostname: kong-db
    networks:
      edgex-network:
        aliases:
            - kong-db
    ports:
        - "5432:5432"
    environment:
        - 'POSTGRES_DB=kong'
        - 'POSTGRES_USER=kong'
        - 'POSTGRES_PASSWORD=password'

  kong-migrations:
    image: kong:1.3.0
    container_name: kong-migrations
    networks:
      edgex-network:
        aliases:
            - kong-migrations
    environment:
        - 'KONG_DATABASE=postgres'
        - 'KONG_PG_HOST=kong-db'
        - 'KONG_PG_USER=kong'
        - 'KONG_PG_PASSWORD=password'
    command: >
      /bin/sh -cx 
      'until /consul/scripts/consul-svc-healthy.sh kong-db;
         do sleep 1;
      done && kong migrations bootstrap;
      kong migrations list;
      code=$$?;
      if [ $$code -eq 5 ]; then
        kong migrations up && kong migrations finish;
      fi'
    volumes:
      - consul-scripts:/consul/scripts
    depends_on:
      - kong-db
      - volume
      - consul

  kong:
    image: kong:1.3.0
    container_name: kong
    hostname: kong
    networks:
      edgex-network:
        aliases:
            - kong
    ports:
        - "8000:8000"
        - "8001:8001"
        - "8443:8443"
        - "8444:8444"
    environment:
        - 'KONG_DATABASE=postgres'
        - 'KONG_PG_HOST=kong-db'
        - 'KONG_PG_USER=kong'
        - 'KONG_PG_PASSWORD=password'
        - 'KONG_PROXY_ACCESS_LOG=/dev/stdout'
        - 'KONG_ADMIN_ACCESS_LOG=/dev/stdout'
        - 'KONG_PROXY_ERROR_LOG=/dev/stderr'
        - 'KONG_ADMIN_ERROR_LOG=/dev/stderr'
        - 'KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl'
    restart: on-failure
    command: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh kong-migrations; do sleep 1; done;
      /docker-entrypoint.sh kong docker-start"
    volumes:
      - consul-scripts:/consul/scripts
    depends_on:
        - kong-db
        - kong-migrations
        - volume
        - consul

  edgex-proxy:
    image: edgexfoundry/docker-edgex-security-proxy-setup-go:1.1.0
    container_name: edgex-proxy
    hostname: edgex-proxy
    networks:
      edgex-network:
        aliases:
            - edgex-proxy
    volumes:
      - vault-config:/vault/config
      - consul-scripts:/consul/scripts
    depends_on:
        - vault
        - kong-db
        - kong


  # edgex-proxy:
  #   image: edgexfoundry/docker-edgex-security-proxy-setup-go:1.1.0
  #   container_name: edgex-proxy
  #   hostname: edgex-proxy
  #   entrypoint: >
  #     /bin/sh -c 
  #     "until /consul/scripts/consul-svc-healthy.sh kong; do sleep 1; done;
  #     until /consul/scripts/consul-svc-healthy.sh security-secretstore-setup; do sleep 1; done;
  #     /edgex/security-proxy-setup --init=true"
  #   networks:
  #     edgex-network:
  #       aliases:
  #           - edgex-proxy
  #   volumes:
  #     - vault-config:/vault/config
  #     - consul-scripts:/consul/scripts
  #   depends_on:
  #       - vault
  #       - kong-db
  #       - kong

  # edgex-proxy-setupaccount:
  #   image: edgexfoundry/docker-edgex-security-proxy-setup-go:1.1.0
  #   container_name: edgex-proxy-setupaccount
  #   hostname: edgex-proxy-setupaccount
  #   networks:
  #     edgex-network:
  #       aliases:
  #           - edgex-proxy-setupaccount
  #   volumes:
  #     - vault-config:/vault/config
  #     - consul-scripts:/consul/scripts
  #   depends_on:
  #       - vault
  #       - kong-db
  #       - kong

# end of containers for reverse proxy

  mongo:
    image: edgexfoundry/docker-edgex-mongo:1.1.0
    ports:
      - "27017:27017"
    container_name: edgex-mongo
    hostname: edgex-mongo
    entrypoint: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh security-secretstore-setup; do sleep 1; done;
      /edgex-mongo/bin/edgex-mongo-launch.sh"
    networks:
      - edgex-network
    volumes:
      - vault-config:/vault/config
      - consul-scripts:/consul/scripts
    depends_on:
      - volume
      - vault-worker

  logging:
    image: edgexfoundry/docker-support-logging-go:1.1.0
    ports:
      - "48061:48061"
    container_name: edgex-support-logging
    hostname: edgex-support-logging
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - config-seed
      - mongo
      - volume

  system:
    image: edgexfoundry/docker-sys-mgmt-agent-go:1.1.0
    ports:
      - "48090:48090"
    container_name: edgex-sys-mgmt-agent
    hostname: edgex-sys-mgmt-agent
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logging

  notifications:
    image: edgexfoundry/docker-support-notifications-go:1.1.0
    ports:
      - "48060:48060"
    container_name: edgex-support-notifications
    hostname: edgex-support-notifications
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - logging

  metadata:
    image: edgexfoundry/docker-core-metadata-go:1.1.0
    ports:
      - "48081:48081"
    container_name: edgex-core-metadata
    hostname: edgex-core-metadata
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - logging

  data:
    image: edgexfoundry/docker-core-data-go:1.1.0
    ports:
      - "48080:48080"
      - "5563:5563"
    container_name: edgex-core-data
    hostname: edgex-core-data
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - logging

  command:
    image: edgexfoundry/docker-core-command-go:1.1.0
    ports:
      - "48082:48082"
    container_name: edgex-core-command
    hostname: edgex-core-command
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - metadata

  scheduler:
    image: edgexfoundry/docker-support-scheduler-go:1.1.0
    ports:
      - "48085:48085"
    container_name: edgex-support-scheduler
    hostname: edgex-support-scheduler
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - metadata

  # app-service-rules:
  #   image: edgexfoundry/docker-app-service-configurable:1.0.0
  #   ports:
  #     - "48100:48100"
  #   container_name: edgex-app-service-configurable-rules
  #   hostname: edgex-app-service-configurable-rules
  #   networks:
  #     edgex-network:
  #       aliases:
  #         - edgex-app-service-configurable-rules
  #   environment:
  #     <<: *common-variables
  #     edgex_service: http://edgex-app-service-configurable-rules:48100
  #     edgex_profile: rules-engine
  #     Service_Host: edgex-app-service-configurable-rules
  #     MessageBus_SubscribeHost_Host: edgex-core-data
  #   depends_on:
  #     - consul
  #     - logging
  #     - data

  # rulesengine:
  #   image: edgexfoundry/docker-support-rulesengine:1.1.0
  #   ports:
  #     - "48075:48075"
  #   container_name: edgex-support-rulesengine
  #   hostname: edgex-support-rulesengine
  #   networks:
  #     edgex-network:
  #       aliases:
  #         - edgex-support-rulesengine
  #   depends_on:
  #     - app-service-rules

  export-client:
    image: edgexfoundry/docker-export-client-go:1.1.0
    ports:
      - "48071:48071"
    container_name: edgex-export-client
    hostname: edgex-export-client
    networks:
      - edgex-network
    environment:
      <<: *common-variables
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - vault-config:/vault/config
    depends_on:
      - data
  
  export-distro:
    image: edgexfoundry/docker-export-distro-go:1.1.0
    ports:
      - "48070:48070"
      - "5566:5566"
    container_name: edgex-export-distro
    hostname: edgex-export-distro
    networks:
      - edgex-network
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
    depends_on:
      - export-client
    environment:
      <<: *common-variables
      EXPORT_DISTRO_CLIENT_HOST: export-client
      EXPORT_DISTRO_DATA_HOST: edgex-core-data
      EXPORT_DISTRO_CONSUL_HOST: dgex-config-seed
      EXPORT_DISTRO_MQTTS_CERT_FILE: none
      EXPORT_DISTRO_MQTTS_KEY_FILE: none

#################################################################
# Device Services
#################################################################

  # device-virtual:
  #   image: edgexfoundry/docker-device-virtual-go:1.1.0
  #   ports:
  #   - "49990:49990"
  #   container_name: edgex-device-virtual
  #   hostname: edgex-device-virtual
  #   networks:
  #     edgex-network:
  #       aliases:
  #       - edgex-device-virtual
  #   volumes:
  #   - db-data:/data/db
  #   - log-data:/edgex/logs
  #   - consul-config:/consul/config
  #   - consul-data:/consul/data
  #   depends_on:
  #   - data
  #   - command

  # device-random:
  #   image: edgexfoundry/docker-device-random-go:1.1.0
  #   ports:
  #     - "49988:49988"
  #   container_name: edgex-device-random
  #   hostname: edgex-device-random
  #   networks:
  #     - edgex-network
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #   depends_on:
  #     - data
  #     - command
  #
  # device-mqtt:
  #   image: edgexfoundry/docker-device-mqtt-go:1.1.0
  #   ports:
  #     - "49982:49982"
  #   container_name: edgex-device-mqtt
  #   hostname: edgex-device-mqtt
  #   networks:
  #     - edgex-network
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #   depends_on:
  #     - data
  #     - command
  #
  # device-modbus:
  #   image: edgexfoundry/docker-device-modbus-go:1.1.0
  #   ports:
  #     - "49991:49991"
  #   container_name: edgex-device-modbus
  #   hostname: edgex-device-modbus
  #   networks:
  #     - edgex-network
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #   depends_on:
  #     - data
  #     - command
  #
  # device-snmp:
  #   image: edgexfoundry/docker-device-snmp-go:1.1.0
  #   ports:
  #     - "49993:49993"
  #   container_name: edgex-device-snmp
  #   hostname: edgex-device-snmp
  #   networks:
  #     - edgex-network
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #   depends_on:
  #     - data
  #     - command

#################################################################
# TIBCO Labs Air
#################################################################

  # flogo-rules:
  #   image: magallardo/docker-support-flogo-rules:1.1.0
  #   ports:
  #     - "48095:48095"
  #   container_name: labsair-support-flogo-rules
  #   hostname: labsair-support-flogo-rules
  #   networks:
  #     edgex-network:
  #       aliases:
  #           - labsair-support-flogo-rules
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #     - ./flogo_rules:/custom-config
  #   depends_on:
  #     - data
  #   entrypoint:
  #     - /support-flogo-rules
  #     - --confdir=/custom-config

  service-flogo-rules:
    image: tibcosoftware/labs-air-edgex-app-service-flogo-rules
    ports:
      - "48095:48095"
    container_name: air-app-service-flogo-rules
    hostname: air-app-service-flogo-rules
    networks:
      edgex-network:
        aliases:
            - air-app-service-flogo-rules
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - ./flogo_rules:/custom-config
    depends_on:
      - data
    entrypoint:
      - /app-service-flogo-rules
      - --confdir=/custom-config

  # service-export-mqtt:
  #   image: magallardo/air-app-service-export-mqtt:1.1.0
  #   ports:
  #     - "48500:48500"
  #   container_name: air-app-service-export-mqtt
  #   hostname: air-app-service-export-mqtt
  #   networks:
  #     edgex-network:
  #       aliases:
  #           - air-app-service-export-mqtt
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #   depends_on:
  #     - data
  #     - command

  service-export-mqtt:
    image: tibcosoftware/labs-air-edgex-app-service-export-mqtt
    ports:
      - "48500:48500"
    container_name: air-app-service-export-mqtt
    hostname: air-app-service-export-mqtt
    networks:
      edgex-network:
        aliases:
            - air-app-service-export-mqtt
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - ./export_mqtt:/custom-config
    depends_on:
      - data
      - command
    entrypoint:
      - /app-service-export-mqtt
      - --confdir=/custom-config

  service-export-kafka:
    image: tibcosoftware/labs-air-edgex-app-service-export-kafka
    ports:
      - "48505:48505"
    container_name: air-app-service-export-kafka
    hostname: air-app-service-export-kafka
    networks:
      edgex-network:
        aliases:
            - air-app-service-export-kafka
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - ./export_kafka:/custom-config
    depends_on:
      - data
      - command
    entrypoint:
      - /app-service-export-kafka
      - --confdir=/custom-config

  device-enersys-mqtt:
    image: tibcosoftware/labs-air-edgex-device-enersys-mqtt
    ports:
      - "49985:49985"
    container_name: labsair-device-enersys-mqtt
    hostname: labsair-device-enersys-mqtt
    networks:
      edgex-network:
        aliases:
            - labsair-device-enersys-mqtt
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - ./enersys:/custom-config
    depends_on:
      - data
      - command
    entrypoint: 
      - /device-enersys-mqtt
      - --registry=consul://edgex-core-consul:8500
      - --confdir=/custom-config

  device-particle-mqtt:
    image: tibcosoftware/labs-air-edgex-device-particle-mqtt
    ports:
      - "48988:48988"
    container_name: labsair-device-particle-mqtt
    hostname: labsair-device-particle-mqtt
    networks:
      edgex-network:
        aliases:
            - labsair-device-particle-mqtt
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - ./particle:/custom-config
    depends_on:
      - data
      - command
    entrypoint: 
      - /device-particle-mqtt
      - --registry=consul://edgex-core-consul:8500
      - --confdir=/custom-config

  device-jabil-rest:
    image: tibcosoftware/labs-air-edgex-device-jabil-rest
    ports:
      - "59995:59995"
    container_name: labsair-device-jabil-rest
    hostname: labsair-device-jabil-rest
    networks:
      edgex-network:
        aliases:
            - labsair-device-jabil-rest
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
    depends_on:
      - data
      - command

  device-vehicle-simulator:
    image: tibcosoftware/labs-air-edgex-device-vehicle-simulator
    ports:
      - "48992:48992"
    container_name: labsair-device-vehicle-simulator
    hostname: labsair-device-vehicle-simulator
    networks:
      edgex-network:
        aliases:
            - labsair-device-vehicle-simulator
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
      - ./vehicle_sim:/custom-config
    depends_on:
      - data
      - command
    entrypoint:
      - /device-vehicle-simulator
      - --confdir=/custom-config

  device-siemens-simulator:
    image: tibcosoftware/labs-air-edgex-device-siemens-simulator
    ports:
      - "48995:48995"
    container_name: labsair-device-siemens-simulator
    hostname: labsair-device-siemens-simulator
    networks:
      edgex-network:
        aliases:
            - labsair-device-siemens-simulator
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
    depends_on:
      - data
      - command

  device-siemens-rest:
    image: tibcosoftware/labs-air-edgex-device-siemens-rest
    ports:
      - "59998:59998"
    container_name: labsair-device-siemens-rest
    hostname: labsair-device-siemens-rest
    networks:
      edgex-network:
        aliases:
            - labsair-device-siemens-rest
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
    depends_on:
      - data
      - command

#################################################################
# UIs
#################################################################
  # ui:
  #   image: edgexfoundry/docker-edgex-ui-go:1.1.0
  #   ports:
  #     - "4000:4000"
  #   container_name: edgex-ui-go
  #   hostname: edgex-ui-go
  #   networks:
  #     - edgex-network
  #   volumes:
  #     - db-data:/data/db
  #     - log-data:/edgex/logs
  #     - consul-config:/consul/config
  #     - consul-data:/consul/data
  #   depends_on:
  #     - data
  #     - command

#################################################################
# Tooling
#################################################################

  portainer:
    image:  portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    depends_on:
      - volume

networks:
  edgex-network:
    driver: "bridge"

