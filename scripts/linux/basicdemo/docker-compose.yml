networks:
  air-backend_air-network:
    external: true
services:
  command:
    container_name: edgex-core-command
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
      metadata:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-core-command
    hostname: edgex-core-command
    image: edgexfoundry/core-command:${EDGEX_FOUNDRY_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:59882:59882/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  consul:
    command: agent -ui -bootstrap -server -client 0.0.0.0
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    image: consul:${CONSUL_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - published: 8500
      target: 8500
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: root:root
    volumes:
    - consul-config:/consul/config:z
    - consul-data:/consul/data:z
  data:
    container_name: edgex-core-data
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
      metadata:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEQUEUE_AUTHMODE: none
      MESSAGEQUEUE_HOST: edgex-mqtt-broker
      MESSAGEQUEUE_OPTIONAL_CLIENTID: core-data
      MESSAGEQUEUE_PORT: 1883
      MESSAGEQUEUE_PROTOCOL: tcp
      MESSAGEQUEUE_TYPE: mqtt
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-core-data
    hostname: edgex-core-data
    image: edgexfoundry/core-data:${EDGEX_FOUNDRY_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:5563:5563/tcp
    - 127.0.0.1:59880:59880/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  database:
    container_name: edgex-redis
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
    hostname: edgex-redis
    image: redis:${REDIS_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:6379:6379/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: root:root
    volumes:
    - db-data:/data:z
  metadata:
    container_name: edgex-core-metadata
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
      notifications:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      NOTIFICATIONS_SENDER: edgex-core-metadata
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-core-metadata
    hostname: edgex-core-metadata
    image: edgexfoundry/core-metadata:${EDGEX_FOUNDRY_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:59881:59881/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  mqtt-broker:
    command: /usr/sbin/mosquitto -c /mosquitto-no-auth.conf
    container_name: edgex-mqtt-broker
    hostname: edgex-mqtt-broker
    image: eclipse-mosquitto:${ECLIPSE_MOSQUITTO_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - published: 1883
      target: 1883
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  notifications:
    container_name: edgex-support-notifications
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-support-notifications
    hostname: edgex-support-notifications
    image: edgexfoundry/support-notifications:${EDGEX_FOUNDRY_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:59860:59860/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  scheduler:
    container_name: edgex-support-scheduler
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      INTERVALACTIONS_SCRUBAGED_HOST: edgex-core-data
      INTERVALACTIONS_SCRUBPUSHED_HOST: edgex-core-data
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-support-scheduler
    hostname: edgex-support-scheduler
    image: edgexfoundry/support-scheduler:${EDGEX_FOUNDRY_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:59861:59861/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  system:
    container_name: edgex-sys-mgmt-agent
    depends_on:
      command:
        condition: service_started
      consul:
        condition: service_started
      data:
        condition: service_started
      metadata:
        condition: service_started
      notifications:
        condition: service_started
      scheduler:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      EXECUTORPATH: /sys-mgmt-executor
      METRICSMECHANISM: executor
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-sys-mgmt-agent
    hostname: edgex-sys-mgmt-agent
    image: edgexfoundry/sys-mgmt-agent:${EDGEX_FOUNDRY_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:58890:58890/tcp
    read_only: true
    restart: always
    security_opt:
    - label:disable
    - no-new-privileges:true
    user: root:root
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:z

# **************
# AIR Components
# **************
  service-metadata:
    container_name: air-app-service-metadata
    depends_on:
      consul:
        condition: service_started
      data:
        condition: service_started
      metadata:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      DATABASES_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: air-app-service-metadata
      TRIGGER_EDGEXMESSAGEBUS_OPTIONAL_AUTHMODE: none
      TRIGGER_EDGEXMESSAGEBUS_OPTIONAL_CLIENTID: airmetadata
      TRIGGER_EDGEXMESSAGEBUS_SUBSCRIBEHOST_HOST: edgex-mqtt-broker
      TRIGGER_EDGEXMESSAGEBUS_SUBSCRIBEHOST_PORT: 1883
      TRIGGER_EDGEXMESSAGEBUS_SUBSCRIBEHOST_PROTOCOL: tcp
      TRIGGER_EDGEXMESSAGEBUS_PUBLISHHOST_HOST: edgex-mqtt-broker
      TRIGGER_EDGEXMESSAGEBUS_PUBLISHHOST_PORT: 1883
      TRIGGER_EDGEXMESSAGEBUS_PUBLISHHOST_PROTOCOL: tcp
      TRIGGER_EDGEXMESSAGEBUS_TYPE: mqtt
      WRITABLE_LOGLEVEL: DEBUG
      APPLICATIONSETTINGS_MQTTHOSTNAME: ${AIR_MQTT_HOSTNAME}
      APPLICATIONSETTINGS_MQTTPORT: ${AIR_MQTT_PORT}
      APPLICATIONSETTINGS_MQTTUSER: ${AIR_MQTT_USER}
      APPLICATIONSETTINGS_MQTTPASSWORD: ${AIR_MQTT_PASSWORD}
      APPLICATIONSETTINGS_MQTTTOPIC: ${AIR_MQTT_DATA_TOPIC}
      APPLICATIONSETTINGS_MQTTPUBLISHER: ${AIR_MQTT_DATA_METADATA_PUBLISHER}
      APPLICATIONSETTINGS_GATEWAYID: ${GATEWAY_ID}
      APPLICATIONSETTINGS_GATEWAYDESCRIPTION: ${GATEWAY_DESCRIPTION}
      APPLICATIONSETTINGS_GATEWAYHOSTNAME: ${GATEWAY_HOSTNAME}
      APPLICATIONSETTINGS_GATEWAYROUTER: ${GATEWAY_ROUTER}
      APPLICATIONSETTINGS_GATEWAYROUTERPORT: ${GATEWAY_ROUTER_PORT}
      APPLICATIONSETTINGS_GATEWAYDEPLOYNETWORK: ${GATEWAY_DEPLOY_NETWORK}
      APPLICATIONSETTINGS_GATEWAYLATITUDE: ${GATEWAY_LATITUDE}
      APPLICATIONSETTINGS_GATEWAYLONGITUDE: ${GATEWAY_LONGITUDE}
      APPLICATIONSETTINGS_GATEWAYACCESSTOKEN: ${GATEWAY_ACCESS_TOKEN}
      APPLICATIONSETTINGS_GATEWAYUSERNAME: ${GATEWAY_USERNAME}
      APPLICATIONSETTINGS_GATEWAYPLATFORM: ${GATEWAY_PLATFORM}
      APPLICATIONSETTINGS_METADATAPUBLISHINTERVALSECS: ${GATEWAY_METADATA_PUBLISH_INTERVAL_SECS}
    hostname: air-app-service-metadata
    image: public.ecr.aws/tibcolabs/labs-air-edgex-app-service-metadata:${LABS_AIR_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
      - 127.0.0.1:48535:48535/tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    
  device-generic-rest:
    container_name: air-device-generic-rest
    depends_on:
      consul:
        condition: service_started
      data:
        condition: service_started
      metadata:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEQUEUE_AUTHMODE: none
      MESSAGEQUEUE_HOST: edgex-mqtt-broker
      MESSAGEQUEUE_PORT: 1883
      MESSAGEQUEUE_PROTOCOL: tcp
      MESSAGEQUEUE_TYPE: mqtt
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: air-device-generic-rest
    hostname: air-device-generic-rest
    image: public.ecr.aws/tibcolabs/labs-air-edgex-device-generic-rest:${LABS_AIR_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:49565:49565/tcp
    read_only: true
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
  
  device-generic-mqtt:
    container_name: air-device-generic-mqtt
    depends_on:
      consul:
        condition: service_started
      data:
        condition: service_started
      metadata:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
      CLIENTS_CORE_DATA_HOST: edgex-core-data
      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEQUEUE_TYPE: mqtt
      MESSAGEQUEUE_PROTOCOL: tcp
      MESSAGEQUEUE_HOST: edgex-mqtt-broker
      MESSAGEQUEUE_PORT: 1883
      MESSAGEQUEUE_AUTHMODE: none
      MESSAGEQUEUE_OPTIONAL_CLIENTID: device-generic-mqtt
      MQTTBROKERINFO_HOST: ${AIR_MQTT_HOSTNAME}
      MQTTBROKERINFO_PORT: ${AIR_MQTT_PORT}
      MQTTBROKERINFO_CLIENTID: ${AIR_MQTT_GENERIC_CLIENTID}
      MQTTBROKERINFO_AUTHMODE: usernamepassword
      MQTTBROKERINFO_USERNAME: ${AIR_MQTT_USER}
      MQTTBROKERINFO_PASSWORD: ${AIR_MQTT_PASSWORD}
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: air-device-generic-mqtt
      WRITABLE_LOGLEVEL: DEBUG
    hostname: air-device-generic-mqtt
    image: public.ecr.aws/tibcolabs/labs-air-edgex-device-generic-mqtt:${LABS_AIR_VERSION}
    networks:
      air-backend_air-network: {}
    ports:
    - 127.0.0.1:49560:49560/tcp
    read_only: true
    security_opt:
    - no-new-privileges:true
    user: 2002:2001

#  device-sound-simulator:
#    container_name: sair-device-sound-simulator
#    depends_on:
#      - consul
#      - data
#      - metadata
#      - mqtt-broker
#    environment:
#      CLIENTS_CORE_COMMAND_HOST: edgex-core-command
#      CLIENTS_CORE_DATA_HOST: edgex-core-data
#      CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
#      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: edgex-support-notifications
#      CLIENTS_SUPPORT_SCHEDULER_HOST: edgex-support-scheduler
#      DATABASES_PRIMARY_HOST: edgex-redis
#      EDGEX_SECURITY_SECRET_STORE: "false"
#      MESSAGEQUEUE_AUTHMODE: none
#      MESSAGEQUEUE_HOST: edgex-mqtt-broker
#      MESSAGEQUEUE_PORT: 1883
#      MESSAGEQUEUE_PROTOCOL: tcp
#      MESSAGEQUEUE_TYPE: mqtt
#      REGISTRY_HOST: edgex-core-consul
#      SERVICE_HOST: air-device-sound-simulator
#      WRITABLE_LOGLEVEL: DEBUG
#    hostname: air-device-sound-simulator
#    image: tibcosoftware/labs-air-edgex-device-sound-simulator:2.1.0
#    networks:
#      air-backend_air-network: {}
#    ports:
#    - 127.0.0.1:49550:49550/tcp
#    read_only: true
#    security_opt:
#    - no-new-privileges:true
#    user: 2002:2001

version: '3.7'
volumes:
  consul-config: {}
  consul-data: {}
  db-data: {}
  kuiper-data: {}

