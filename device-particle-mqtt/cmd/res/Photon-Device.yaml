name: "Photon-Device"
manufacturer: "Particle"
model: "Photon"
labels:
- "mqtt"
description: "Particle Photon device profile"


deviceResources:
  -
    name: "LightSensor"
    description: "Measures intensity of light. The brighter the light, the larger the value"
    attributes:
      { Pin_Num: "A0", Interface: "AIO", Type: "IN" }
    properties:
      value:
        { type: "INT16", readWrite: "RW", minimum: "0", maximum: "", defaultValue: "0"}
      units:
        { type: "String", readWrite: "R", defaultValue: "lunen" }
  -
    name: "RotaryAngleSensor"
    description: "Measures angular range. Produces analog output between 0 and Vcc (3.3VDC)"
    attributes:
      { Pin_Num: "A4", Interface: "AIO", Type: "IN", normalize: "false" }
    properties:
      value:
        { type: "INT16", readWrite: "RW", minimum: "0", maximum: "300", scale: "1", defaultValue: "0"}
      units:
        { type: "String", readWrite: "R", defaultValue: "Degree" }
  -
    name: "Button"
    description: "On/Off , 0-OFF 1-ON"
    attributes:
      { Pin_Num: "D6", Interface: "GPIO", Type: "IN" }
    properties:
      value:
        { type: "BOOL", readWrite: "RW", defaultValue: "0", minimum: "0", maximum: "1"}
      units:
        { type: "String", readWrite: "R", defaultValue: "OFF" }

deviceCommands:
  -
    name: LightSensor
    get:
      - { index: "1", operation: "get", object: "LightSensor", parameter: "LightSensor", property: "value" }
  -
    name: RotaryAngleSensor
    get:
      - { index: "1", operation: "get", object: "RotaryAngleSensor", parameter: "RotaryAngleSensor", property: "value" }
  -
    name: Button
    get:
      - { index: "1", operation: "get", object: "Button", parameter: "Button", property: "value" }

coreCommands:
  -
    name: LightSensor
    get:
      path: "/api/v1/device/{deviceId}/LightSensor"
      responses:
        -
          code: "200"
          description: "get the light sensor value"
          expectedValues: ["LightSensor"]
        -
          code: "503"
          description: "get lightsensor service unavailable"
          expectedValues: []
  -
    name: RotaryAngleSensor
    get:
      path: "/api/v1/device/{deviceId}/RotaryAngleSensor"
      responses:
        -
          code: "200"
          description: "get the rotary angle sensor value"
          expectedValues: ["RotaryAngleSensor"]
        -
          code: "503"
          description: "get rotaryanglesensor service unavailable"
          expectedValues: []
  -
    name: Button
    get:
      path: "/api/v1/device/{deviceId}/Button"
      responses:
        -
          code: "200"
          description: "get the button value"
          expectedValues: ["Button"]
        -
          code: "503"
          description: "get button service unavailable"
          expectedValues: []

